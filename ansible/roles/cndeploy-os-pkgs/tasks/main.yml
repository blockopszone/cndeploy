# Ansible role that installs and updates packages for Debian and RedHat based OS.
# TODO: Upgrade packages for other distributions.

---

- name: 'Resolve platform specific vars'
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml'
        - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      paths:
        - '{{ role_path }}/vars'
      skip: true

- name: 'Install dependencies for the OS'
  ansible.builtin.package:
    name: '{{ cndeploy_pkgs_dep|default([]) }}'
    state: 'present'
  become: true
  become_user: 'root'

- name: 'Update cache for Debian based systems'
  ansible.builtin.apt:
    update_cache: true
  become: true
  become_user: 'root'
  when:
    - cndeploy_pkgs_update|default(false)|bool
    - ansible_facts['os_family'] == 'Debian'

- name: 'Upgrade all packages for Debian based Systems'
  ansible.builtin.apt:
    name: '*'
    state: 'latest'
  become: true
  become_user: 'root'
  when:
    - cndeploy_pkgs_upgrade|default(false)|bool
    - ansible_facts['os_family'] == 'Debian'

- name: 'Update cache for RedHat based systems'
  ansible.builtin.yum:
    update_cache: true
  become: true
  become_user: 'root'
  when:
    - cndeploy_pkgs_update|default(false)|bool
    - ansible_facts['os_family'] == 'RedHat'

- name: 'Upgrade all packages for RedHat based Systems'
  ansible.builtin.yum:
    name: '*'
    state: 'latest'
  become: true
  become_user: 'root'
  when:
    - cndeploy_pkgs_upgrade|default(false)|bool
    - ansible_facts['os_family'] == 'RedHat'

- name: 'Install additional packages'
  ansible.builtin.package:
    name: '{{ cndeploy_pkgs_add|default([]) }}'
    state: 'present'
  become: true
  become_user: 'root'
  when: cndeploy_install_additional|default(false)|bool

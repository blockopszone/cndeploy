# Ansible role containing tasks to build and install Guild's operator cnode.
#Â TODO: allow cnode to be installed in a custom path instead of the default one
# TODO: after install clean up

---

- name: 'Resolve platform specific vars'
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml'
        - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      paths:
        - '{{ role_path }}/vars'
      skip: true

- name: 'Install dependencies for the OS'
  ansible.builtin.package:
    name: '{{ cndeploy_pkgs_dep|default([]) }}'
    state: 'present'
  become: true
  become_user: 'root'

- name: 'Stop the node service if it exists and it is started'
  ansible.builtin.service:
    name: 'cnode.service'
    state: 'stopped'
  become: true
  become_user: 'root'
  failed_when: cnodeservice is failed and not 'Could not find the requested service' in cnodeservice.msg
  notify: 'Start Cardano node'
  register: cnodeservice

- name: 'Install Guild Operators CNODE'
  block:
    - name: 'Ensures $HOME/tmp exist'
      ansible.builtin.file:
        path: '~/tmp'
        recurse: true
        state: 'directory'
    - name: 'Get Guild Operators prereqs.sh script'
      ansible.builtin.get_url:
        dest: '~/tmp/'
        mode: '0755'
        url: 'https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/prereqs.sh'
    - name: 'Run prereqs.sh installer without Rust and cncli'
      ansible.builtin.command:
        cmd: '~/tmp/prereqs.sh'
      when: not cndeploy_cnode_cncli_install
    - name: 'Run prereqs.sh installer with Rust and cncli'
      ansible.builtin.command:
        cmd: '~/tmp/prereqs.sh -c'
      when: cndeploy_cnode_cncli_install

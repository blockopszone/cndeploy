# Set to the user to be used for installation, it'll be created if don't exist
# set to '{{ ansible_user_id }}' to use the user that Ansible connects with
# Required
cndeploy_user: '{{ ansible_user_id }}'

# Set to the desired/existent home for the user, init scripts will be placed
# Required
cndeploy_user_home: '/home/{{ cndeploy_user }}'

# Set the local cnode directory
# Required
cndeploy_cnode_dir_local: '/opt/cardano/cnode'

# Set to true to override the checks for cndeploy_cnode_dir_local
# Required
cndeploy_cnode_dir_local_check_override: false

# Set the install directory, by default /opt/cardano/cnode
# IMPORTANT, for now, please use the default value to
# keep the compatibility with other cndeploy roles.
# Required
cndeploy_cnode_dir: '/opt/cardano/cnode'

# Define the type of node, valid values are 'relay' or 'bp'
# Required
cndeploy_node_type: 'relay'

# Define stake pool ticker (between 3 and 5 characters)
# Used in configuration files and for filesystem paths
# Required
cndeploy_node_ticker: 'TICKR'

# Define the TCP port where the node will listen
# Required
cndeploy_node_port: 3000

# Define the number of cores to use by the node at the target system
# Do not specify more cores than the ones available
# Required
cndeploy_node_cores: 2

# Custom peers field for topology following (IP,port[,valency]) format
# for example: 10.0.0.1,3001|10.0.0.2,3002|relays.mydomain.com,3003,3
# Used by Relay Nodes to generate topology.json via topologyUpdater script
cndeploy_node_custom_peers:

# Define the list of relay nodes, used by a template for topology.json generation
#Â Used by BP Nodes to generate topology.json via template
cndeploy_relay_nodes:
#  - addr: some.host.dom
#    port: 3000
#    valency: 1
#  - addr: 3.3.3.3
#    port: 3000
#    valency: 1

# Set to true to add the defined aliases to user's bash
cndeploy_add_aliases: false

# Define the aliases to be added
cndeploy_aliases: |
  alias g='{{ cndeploy_cnode_dir }}/scripts/gLiveView.sh'
  alias nstart='sudo systemctl start cnode.service'
  alias nstop='sudo systemctl stop cnode.service'
  alias nstatus='sudo systemctl status cnode.service'
  alias nlog='sudo journalctl -f -u cnode.service'
  alias h='htop'
  alias c='clear'
